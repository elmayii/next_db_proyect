generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contrato {
  id_contrato  Int       @id @default(autoincrement())
  fecha_ini    DateTime  @db.Date
  fecha_fin    DateTime  @db.Date
  dias_prorro  Int
  seguro       Boolean
  id_formaPago Int
  id_usuario   Int
  id_moto      Int
  precio       Float     @default(100)
  FormaPago    FormaPago @relation(fields: [id_formaPago], references: [id_formaPago], onDelete: NoAction, onUpdate: NoAction, map: "id_formaPago_fk")
  Moto         Moto      @relation(fields: [id_moto], references: [id_moto], onDelete: NoAction, onUpdate: NoAction, map: "id_moto_fk")
  Usuario      Usuario   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "id_usuario_fk")
}

model FormaPago {
  id_formaPago  Int        @id @default(autoincrement())
  nom_formaPago String     @db.VarChar
  Contrato      Contrato[]
}

model Marca {
  id_marca  Int      @id @default(autoincrement())
  nom_marca String?  @db.VarChar
  Modelo    Modelo[]
  Moto      Moto[]
}

model Modelo {
  id_modelo  Int    @id @default(autoincrement())
  nom_modelo String @db.VarChar
  id_marca   Int
  Marca      Marca  @relation(fields: [id_marca], references: [id_marca], onDelete: NoAction, onUpdate: NoAction, map: "id_marca_fk")
  Moto       Moto[]
}

model Moto {
  id_moto   Int        @id @default(autoincrement())
  color     String     @db.VarChar
  km        Float
  id_marca  Int
  id_modelo Int
  id_situa  Int        @default(3)
  matricula String     @db.VarChar
  Contrato  Contrato[]
  Marca     Marca      @relation(fields: [id_marca], references: [id_marca], onDelete: NoAction, onUpdate: NoAction, map: "id_marca_fk")
  Modelo    Modelo     @relation(fields: [id_modelo], references: [id_modelo], onDelete: NoAction, onUpdate: NoAction, map: "id_modelo_fk")
  Situacion Situacion  @relation(fields: [id_situa], references: [id_situa], onDelete: NoAction, onUpdate: NoAction, map: "id_situa")
}

model Municipio {
  id_mun  Int       @id @default(autoincrement())
  nom_mun String    @db.VarChar
  Usuario Usuario[]
}

model Rol {
  id_rol  Int    @id @default(autoincrement())
  nom_rol String @db.VarChar
}

model Situacion {
  id_situa  Int     @id @default(autoincrement())
  nom_situa String? @db.VarChar
  Moto      Moto[]
}

model Usuario {
  id_usuario  Int        @id(map: "Cliente_pkey") @default(autoincrement())
  nom_usuario String     @db.VarChar
  edad        Int
  sexo        String     @db.VarChar
  num_tel     String     @db.VarChar
  id_mun      Int
  id_rol      Int
  password    String     @db.VarChar
  Contrato    Contrato[]
  Municipio   Municipio  @relation(fields: [id_mun], references: [id_mun], onDelete: NoAction, onUpdate: NoAction, map: "id_mun_fk")
}
